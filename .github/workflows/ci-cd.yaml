name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # super-lint:
  #   name: Super-Linter
  #   on:
  #     push:
  #       branches:
  #         - main

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Run Super-Linter
  #       uses: github/super-linter@v4
  #       env:
  #         DEFAULT_BRANCH: main
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  dockerise:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
  
      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/prima:v2 .
      
      - name: Log in to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/prima:v2
          
  deploy:
    needs: dockerise
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Minikube
        run: |
          sudo apt-get update
          sudo apt-get install -y conntrack
          minikube start

      - name: Check Minikube Status
        run: minikube status
      
      - name: Debug Environment Variables
        run: |
          echo "DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}"
        # echo "DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}"
        
      - name: Pull Docker Image from Docker Hub
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/prima:v2

      - name: View local images
        run: docker images
        
      - name: Tag Docker Image for Minikube
        run: |
          docker --host=ssh://$(minikube ip) tag ${{ secrets.DOCKERHUB_USERNAME }}/prima:v2 minikube/prima:v2
        shell: bash

      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/pv.yaml
          kubectl apply -f k8s/pvc.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/deployment.yaml
        
 